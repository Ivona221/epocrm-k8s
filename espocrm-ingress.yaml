apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: espocrm-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    #kubernetes.io/ingress.class: "public-nginx"
    # nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    # nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # nginx.ingress.kubernetes.io/server-snippets: |
    #   location / {
    #   proxy_set_header Upgrade $http_upgrade;
    #   proxy_http_version 1.1;
    #   proxy_set_header X-Forwarded-Host $http_host;
    #   proxy_set_header X-Forwarded-Proto $scheme;
    #   proxy_set_header X-Forwarded-For $remote_addr;
    #   proxy_set_header Host $host;
    #   proxy_set_header Connection "upgrade";
    #   proxy_cache_bypass $http_upgrade;
    #   }
spec:
  tls:
    - hosts:
        - espocrm-region1.onazure.com
      secretName: ingress-tls-csi
  ingressClassName: nginx
  rules:
  - host: espocrm-region1.onazure.com
  - http:
      paths:
      - path: /app2(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: espocrm
            port:
              number: 80
      - path: /ws2(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: espocrm-websocket
            port:
              number: 8081
